#!/bin/env perl
use strict;
use warnings;
use Data::Dumper;
$Data::Dumper::Purity = 1;

########################################################################
# The script calculates the MS2 %fragmentation coverage of peptides    #
# by calculating how many positions along the peptide sequence         #
# get fragmented out of the total number of positions                  # 
########################################################################

my $wdir=$ARGV[0];
my $i=$wdir."/best.msms.for.fragmentation.txt";  

# input file should be in the format below for all msms or the best msms.
# input can also be generated by Arrange.msms.inputs.py

#Input file with 3 columns tab-delimited:
#Column1: Free text (for example you can indicate if it the best hit, or 'raw file name'@'msms ID' and etc.)
#Column2: peptide 
#Column3: ions(matches) in the format of MaxQuant

#input file example:
#QEP2_13046_YSA_921_1_301220@1   AAAAAAAAATN     y8;y9;b3;b4;b5;b6;b7;b8;b9
#QEP2_13046_YSA_917_1_301220@2   AAAAAAAAAW      y1;y2;y3;y9(2+);a2;b2;b3;b4;b5;b6;b7;b8;b6(2+);b7(2+);b8(2+)
#QEP2_13046_YSA_917_1_301220@3   AAAAAAAAAW      y1;y2;a2;b2;b3;b4;b5;b6;b7;b8;b6(2+);b8(2+)
#QEP2_13046_YSA_917_1_301220@4   AAAAAAAAAW      y1;y2;y3;y4;y5;y6;b2;b3;b4;b5;b6;b7;b8;b9
#QEP2_13046_YSA_918_1_301220@5   AAAAAAAAAW      y1;y2;y3;a2;b2;b3;b4;b5;b6;b7;b8;b6(2+);b8(2+)
#QEP2_13046_YSA_918_1_301220@6   AAAAAAAAAW      y1;y2;y3;y5;b2;b3;b4;b5;b6;b7;b8;b9

my %o=();

my $line;

open (MF, "<$i") or die "Couldn't open $i, $!";
print "Sequence\tFragmentation\tRaw MS\tRID\n";

while ($line=<MF>) { # read all lines in file
	chomp($line);

	my @mq=split(/\t/,$line); #split tab delimited row
	my $pep=$mq[1];
	my $ion_string=$mq[2];

	if(!defined $ion_string){printf "%s\t%s\t%s\n",$pep,"ions not available",$mq[0]; next;}

	#examples of ion strings:
	#y10;y11;y13;y14;y10-H2O;y11-H2O;y14-H2O;a2;b5;b14;b14-H2O;b13(2+) 
	#y3;y4;y5;y6;y7;y8;y9;y10;y11;y12;y13;y9-H2O;y10-H2O;y6(2+);y8(2+);a2;b2;b3;b4;b5;b6
	#y1;y4;y6;y7;y8;y9;y10;y11;y13;y14;y15;y7-H2O;y8-NH3;y11-NH3;y14-NH3;y12(2+);a2;b2;b3;b3-H2O;b4;b4-H2O;b5;b6;b7;b8;b8-H2O;b9;b13;b14;b15;b11(2+);b14(2+)
	$ion_string=~s/(-H2O|-NH3)//g;
	#$ion_string=~s/a\d+\;//g;
	$ion_string=~s/\(\d+\+\)//g;
	my @ions=split(/\;/,$ion_string);
	my %join_nc=();
	foreach (@ions) { #go over all ions in row
		if($_=~/^y(\d+)$/) { #C-term ion
			$join_nc{length($pep)-$1}=1;
			}
		elsif($_=~/^[ab](\d+)$/) { #N-term ions
			$join_nc{$1}=1;
			}
		}
	my $coverage=100*scalar(keys %join_nc)/(length($pep)-1); #calculate %fragmentation coverage
	$mq[0]=~/^(.*?)\@/;
	printf "%s\t%3.2f\t%s\t%s\n",$pep,$coverage,$1,$mq[0]; #print the output to shell screen
	}
close (MF);
